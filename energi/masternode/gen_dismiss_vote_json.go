// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package mn_back

import (
	"encoding/json"
	"errors"
	"math/big"

	"github.com/IntegralTeam/energi/common"
)

// MarshalJSON marshals as JSON.
func (d DismissVote) MarshalJSON() ([]byte, error) {
	type DismissVote struct {
		CraAddressToDismiss   common.Address   `json:"craAddressToDismiss" gencodec:"required"`
		ExpirationBlockNumber *big.Int         `json:"expirationBlockNumber" gencodec:"required"`
		Reason                DismissingReason `json:"reason" gencodec:"required"`
		Timestamp             uint64           `json:"time" gencodec:"required"`
		Auth                  Auth             `json:"auth" gencodec:"required"`
	}
	var enc DismissVote
	enc.CraAddressToDismiss = d.CraAddressToDismiss
	enc.ExpirationBlockNumber = d.ExpirationBlockNumber
	enc.Reason = d.Reason
	enc.Timestamp = d.Timestamp
	enc.Auth = d.Auth
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (d *DismissVote) UnmarshalJSON(input []byte) error {
	type DismissVote struct {
		CraAddressToDismiss   *common.Address   `json:"craAddressToDismiss" gencodec:"required"`
		ExpirationBlockNumber *big.Int          `json:"expirationBlockNumber" gencodec:"required"`
		Reason                *DismissingReason `json:"reason" gencodec:"required"`
		Timestamp             *uint64           `json:"time" gencodec:"required"`
		Auth                  *Auth             `json:"auth" gencodec:"required"`
	}
	var dec DismissVote
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.CraAddressToDismiss == nil {
		return errors.New("missing required field 'craAddressToDismiss' for DismissVote")
	}
	d.CraAddressToDismiss = *dec.CraAddressToDismiss
	if dec.ExpirationBlockNumber == nil {
		return errors.New("missing required field 'expirationBlockNumber' for DismissVote")
	}
	d.ExpirationBlockNumber = dec.ExpirationBlockNumber
	if dec.Reason == nil {
		return errors.New("missing required field 'reason' for DismissVote")
	}
	d.Reason = *dec.Reason
	if dec.Timestamp == nil {
		return errors.New("missing required field 'time' for DismissVote")
	}
	d.Timestamp = *dec.Timestamp
	if dec.Auth == nil {
		return errors.New("missing required field 'auth' for DismissVote")
	}
	d.Auth = *dec.Auth
	return nil
}
