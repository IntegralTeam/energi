// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package mn_back

import (
	"encoding/json"
	"errors"
)

// MarshalJSON marshals as JSON.
func (h Heartbeat) MarshalJSON() ([]byte, error) {
	type Heartbeat struct {
		Timestamp uint64 `json:"time" gencodec:"required"`
		Auth      Auth   `json:"auth" gencodec:"required"`
	}
	var enc Heartbeat
	enc.Timestamp = h.Timestamp
	enc.Auth = h.Auth
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (h *Heartbeat) UnmarshalJSON(input []byte) error {
	type Heartbeat struct {
		Timestamp *uint64 `json:"time" gencodec:"required"`
		Auth      *Auth   `json:"auth" gencodec:"required"`
	}
	var dec Heartbeat
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Timestamp == nil {
		return errors.New("missing required field 'time' for Heartbeat")
	}
	h.Timestamp = *dec.Timestamp
	if dec.Auth == nil {
		return errors.New("missing required field 'auth' for Heartbeat")
	}
	h.Auth = *dec.Auth
	return nil
}
